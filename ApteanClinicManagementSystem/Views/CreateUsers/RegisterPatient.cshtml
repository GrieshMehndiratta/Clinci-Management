@model ApteanClinicManagementSystem.Models.PatientViewModel

@{
    ViewBag.Title = "AddPatient";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register Patient</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel='stylesheet' href='https://use.fontawesome.com/releases/v5.7.0/css/all.css' integrity='sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ' crossorigin='anonymous'>
    <style>
        body {
            margin: 20pt !important;
            background-image: url(../Images/loginBackground.jpg);
            background-size: cover;
            background-attachment: fixed
        }

        body-content {
            margin-top: 3%;
        }
    </style>
</head>
<body>
    <div class="body-content">
        <div class="container panel panel-default" style="background-color: rgba(247,247,247,0.8);padding:20px;">
            <h2>Register Patient</h2>
            <hr />
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <div class="user-error-message">
                @ViewBag.ErrorMessage
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.UserDetails.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Full Name" } })
                    @Html.ValidationMessageFor(model => model.UserDetails.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EnumDropDownListFor(model => model.UserDetails.Gender, htmlAttributes: new { @class = "form-control", placeholder = "Select the Gender" })
                    @Html.ValidationMessageFor(model => model.UserDetails.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Age" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.UserDetails.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Address" } })
                    @Html.ValidationMessageFor(model => model.UserDetails.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EnumDropDownListFor(model => model.UserDetails.City, htmlAttributes: new { @class = "form-control", placeholder = "Select the City" })
                    @Html.ValidationMessageFor(model => model.UserDetails.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.UserDetails.PhoneNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Phone Number" } })
                    @Html.ValidationMessageFor(model => model.UserDetails.PhoneNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.UserDetails.EmailId, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email Id" } })
                    @Html.ValidationMessageFor(model => model.UserDetails.EmailId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.UserDetails.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter User Name" } })
                    @Html.ValidationMessageFor(model => model.UserDetails.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.UserDetails.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password" } })
                    @Html.ValidationMessageFor(model => model.UserDetails.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserDetails.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.UserDetails.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
                    @Html.ValidationMessageFor(model => model.UserDetails.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter height in cm" } })
                    @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter weight in kg" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Emergency Contact's Name" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Emergency Contact's Phone Number" } })
                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Emergency Contact's Address" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EnumDropDownListFor(model => model.Relation, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Relation, "", new { @class = "text-danger" })
                </div>
            </div>s


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                    <input type="button" value="Cancel" class="btn btn-default" onclick="@("location.href='"+ Url.Action("Index","Login")+ "'")" />
                </div>
            </div>
        </div>
            }
            <center>
                <hr />
                <h2><i class="far fa-hospital"></i>Clinic Management System</h2>
            </center>
        </div>
    </div>
    @Scripts.Render("~/bundles/js")
    @Scripts.Render("~/bundles/bootstrap")
</body>
</html>