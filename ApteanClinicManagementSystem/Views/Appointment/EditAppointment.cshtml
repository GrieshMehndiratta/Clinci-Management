@model ApteanClinicManagementSystem.Models.EditAppointmentViewModel

@{
    ViewBag.Title = "AdminEditAppointment";
}

<h2>Edit Appointment</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AppointmentID)

    <div class="form-group">
        @Html.Label("Doctor", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-control" ,@readonly="readonly"} })
            @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @{
            var date = @Model.AppointmentDate.ToShortDateString();
            }
            @Html.EditorFor(dates => date,  new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Time", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AppointmentTime, new { htmlAttributes = new { @class = "form-control",@readonly="readonly",  disabled = "disabled"} })
            @Html.ValidationMessageFor(model => model.AppointmentTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Detail", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control",@readonly="readonly", disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.Status == 0)
            {
            <div>
                @Html.RadioButtonFor(model => model.Status, 0, new { @checked = true }) Approved
                @Html.RadioButtonFor(model => model.Status, 1)                         Pending
                @Html.RadioButtonFor(model => model.Status, 2)                         Cancelled
            </div>
            }
            else if (Model.Status == 1)
            {
            <div>
                @Html.RadioButtonFor(model => model.Status, 0)                          Approved
                @Html.RadioButtonFor(model => model.Status, 1, new { @checked = true })  Pending
                @Html.RadioButtonFor(model => model.Status, 2)                          Cancelled
            </div>
            }
            else
            {
            <div>
                @Html.RadioButtonFor(model => model.Status, 0)                        Approved
                @Html.RadioButtonFor(model => model.Status, 1)                        Pending
                @Html.RadioButtonFor(model => model.Status, 2, new { @checked = true }) Cancelled
            </div>
            }
        </div>



    </div>
    <hr />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
            <input type="button" value="Back" class="btn btn-default" onclick="@(" location.href='"+ Url.Action("ViewAppointments","Appointment")+ "' ")" />

        </div>
    </div>
</div>
}
